
SafeBox.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002a  00800100  00000c18  00000cac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000c18  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000005  0080012a  0080012a  00000cd6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000cd6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000d34  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a0  00000000  00000000  00000d78  2**3
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000193f  00000000  00000000  00000f18  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000be5  00000000  00000000  00002857  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000fb6  00000000  00000000  0000343c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000022c  00000000  00000000  000043f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005e1  00000000  00000000  00004620  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b47  00000000  00000000  00004c01  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000130  00000000  00000000  00005748  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e8 e1       	ldi	r30, 0x18	; 24
  7c:	fc e0       	ldi	r31, 0x0C	; 12
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 32       	cpi	r26, 0x2A	; 42
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e2       	ldi	r26, 0x2A	; 42
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	af 32       	cpi	r26, 0x2F	; 47
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 0e 02 	call	0x41c	; 0x41c <main>
  9e:	0c 94 0a 06 	jmp	0xc14	; 0xc14 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <GPIO_config_output>:
/* Includes ----------------------------------------------------------*/
#include "Gpio.h"
/* Function definitions ----------------------------------------------*/
void GPIO_config_output(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name | (1<<pin_num); //Set bit (or¡)
  a6:	fc 01       	movw	r30, r24
  a8:	40 81       	ld	r20, Z
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	30 e0       	ldi	r19, 0x00	; 0
  ae:	02 c0       	rjmp	.+4      	; 0xb4 <GPIO_config_output+0xe>
  b0:	22 0f       	add	r18, r18
  b2:	33 1f       	adc	r19, r19
  b4:	6a 95       	dec	r22
  b6:	e2 f7       	brpl	.-8      	; 0xb0 <GPIO_config_output+0xa>
  b8:	24 2b       	or	r18, r20
  ba:	20 83       	st	Z, r18
  bc:	08 95       	ret

000000be <configKeypad>:
  be:	84 b1       	in	r24, 0x04	; 4
  c0:	87 60       	ori	r24, 0x07	; 7
  c2:	84 b9       	out	0x04, r24	; 4
  c4:	08 95       	ret

000000c6 <keyPressed>:
  c6:	28 9a       	sbi	0x05, 0	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  c8:	2f ef       	ldi	r18, 0xFF	; 255
  ca:	80 e7       	ldi	r24, 0x70	; 112
  cc:	92 e0       	ldi	r25, 0x02	; 2
  ce:	21 50       	subi	r18, 0x01	; 1
  d0:	80 40       	sbci	r24, 0x00	; 0
  d2:	90 40       	sbci	r25, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <keyPressed+0x8>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <keyPressed+0x12>
  d8:	00 00       	nop
  da:	1b 99       	sbic	0x03, 3	; 3
  dc:	27 c0       	rjmp	.+78     	; 0x12c <keyPressed+0x66>
  de:	1c 99       	sbic	0x03, 4	; 3
  e0:	37 c0       	rjmp	.+110    	; 0x150 <keyPressed+0x8a>
  e2:	1d 99       	sbic	0x03, 5	; 3
  e4:	47 c0       	rjmp	.+142    	; 0x174 <keyPressed+0xae>
  e6:	1e 99       	sbic	0x03, 6	; 3
  e8:	57 c0       	rjmp	.+174    	; 0x198 <keyPressed+0xd2>
  ea:	28 98       	cbi	0x05, 0	; 5
  ec:	29 9a       	sbi	0x05, 1	; 5
  ee:	2f ef       	ldi	r18, 0xFF	; 255
  f0:	80 e7       	ldi	r24, 0x70	; 112
  f2:	92 e0       	ldi	r25, 0x02	; 2
  f4:	21 50       	subi	r18, 0x01	; 1
  f6:	80 40       	sbci	r24, 0x00	; 0
  f8:	90 40       	sbci	r25, 0x00	; 0
  fa:	e1 f7       	brne	.-8      	; 0xf4 <keyPressed+0x2e>
  fc:	00 c0       	rjmp	.+0      	; 0xfe <keyPressed+0x38>
  fe:	00 00       	nop
 100:	1b 99       	sbic	0x03, 3	; 3
 102:	19 c0       	rjmp	.+50     	; 0x136 <keyPressed+0x70>
 104:	1c 99       	sbic	0x03, 4	; 3
 106:	29 c0       	rjmp	.+82     	; 0x15a <keyPressed+0x94>
 108:	1d 99       	sbic	0x03, 5	; 3
 10a:	39 c0       	rjmp	.+114    	; 0x17e <keyPressed+0xb8>
 10c:	1e 99       	sbic	0x03, 6	; 3
 10e:	49 c0       	rjmp	.+146    	; 0x1a2 <keyPressed+0xdc>
 110:	29 98       	cbi	0x05, 1	; 5
 112:	2a 9a       	sbi	0x05, 2	; 5
 114:	2f ef       	ldi	r18, 0xFF	; 255
 116:	80 e7       	ldi	r24, 0x70	; 112
 118:	92 e0       	ldi	r25, 0x02	; 2
 11a:	21 50       	subi	r18, 0x01	; 1
 11c:	80 40       	sbci	r24, 0x00	; 0
 11e:	90 40       	sbci	r25, 0x00	; 0
 120:	e1 f7       	brne	.-8      	; 0x11a <keyPressed+0x54>
 122:	00 c0       	rjmp	.+0      	; 0x124 <keyPressed+0x5e>
 124:	00 00       	nop
 126:	1b 99       	sbic	0x03, 3	; 3
 128:	0b c0       	rjmp	.+22     	; 0x140 <keyPressed+0x7a>
 12a:	0f c0       	rjmp	.+30     	; 0x14a <keyPressed+0x84>
 12c:	1b 99       	sbic	0x03, 3	; 3
 12e:	fe cf       	rjmp	.-4      	; 0x12c <keyPressed+0x66>
 130:	28 98       	cbi	0x05, 0	; 5
 132:	8e e4       	ldi	r24, 0x4E	; 78
 134:	08 95       	ret
 136:	1b 99       	sbic	0x03, 3	; 3
 138:	fe cf       	rjmp	.-4      	; 0x136 <keyPressed+0x70>
 13a:	29 98       	cbi	0x05, 1	; 5
 13c:	80 e3       	ldi	r24, 0x30	; 48
 13e:	08 95       	ret
 140:	1b 99       	sbic	0x03, 3	; 3
 142:	fe cf       	rjmp	.-4      	; 0x140 <keyPressed+0x7a>
 144:	2a 98       	cbi	0x05, 2	; 5
 146:	8e e4       	ldi	r24, 0x4E	; 78
 148:	08 95       	ret
 14a:	1c 99       	sbic	0x03, 4	; 3
 14c:	0b c0       	rjmp	.+22     	; 0x164 <keyPressed+0x9e>
 14e:	0f c0       	rjmp	.+30     	; 0x16e <keyPressed+0xa8>
 150:	1c 99       	sbic	0x03, 4	; 3
 152:	fe cf       	rjmp	.-4      	; 0x150 <keyPressed+0x8a>
 154:	28 98       	cbi	0x05, 0	; 5
 156:	87 e3       	ldi	r24, 0x37	; 55
 158:	08 95       	ret
 15a:	1c 99       	sbic	0x03, 4	; 3
 15c:	fe cf       	rjmp	.-4      	; 0x15a <keyPressed+0x94>
 15e:	29 98       	cbi	0x05, 1	; 5
 160:	88 e3       	ldi	r24, 0x38	; 56
 162:	08 95       	ret
 164:	1c 99       	sbic	0x03, 4	; 3
 166:	fe cf       	rjmp	.-4      	; 0x164 <keyPressed+0x9e>
 168:	2a 98       	cbi	0x05, 2	; 5
 16a:	89 e3       	ldi	r24, 0x39	; 57
 16c:	08 95       	ret
 16e:	1d 99       	sbic	0x03, 5	; 3
 170:	0b c0       	rjmp	.+22     	; 0x188 <keyPressed+0xc2>
 172:	0f c0       	rjmp	.+30     	; 0x192 <keyPressed+0xcc>
 174:	1d 99       	sbic	0x03, 5	; 3
 176:	fe cf       	rjmp	.-4      	; 0x174 <keyPressed+0xae>
 178:	28 98       	cbi	0x05, 0	; 5
 17a:	84 e3       	ldi	r24, 0x34	; 52
 17c:	08 95       	ret
 17e:	1d 99       	sbic	0x03, 5	; 3
 180:	fe cf       	rjmp	.-4      	; 0x17e <keyPressed+0xb8>
 182:	29 98       	cbi	0x05, 1	; 5
 184:	85 e3       	ldi	r24, 0x35	; 53
 186:	08 95       	ret
 188:	1d 99       	sbic	0x03, 5	; 3
 18a:	fe cf       	rjmp	.-4      	; 0x188 <keyPressed+0xc2>
 18c:	2a 98       	cbi	0x05, 2	; 5
 18e:	86 e3       	ldi	r24, 0x36	; 54
 190:	08 95       	ret
 192:	1e 99       	sbic	0x03, 6	; 3
 194:	0b c0       	rjmp	.+22     	; 0x1ac <keyPressed+0xe6>
 196:	0f c0       	rjmp	.+30     	; 0x1b6 <keyPressed+0xf0>
 198:	1e 99       	sbic	0x03, 6	; 3
 19a:	fe cf       	rjmp	.-4      	; 0x198 <keyPressed+0xd2>
 19c:	28 98       	cbi	0x05, 0	; 5
 19e:	81 e3       	ldi	r24, 0x31	; 49
 1a0:	08 95       	ret
 1a2:	1e 99       	sbic	0x03, 6	; 3
 1a4:	fe cf       	rjmp	.-4      	; 0x1a2 <keyPressed+0xdc>
 1a6:	29 98       	cbi	0x05, 1	; 5
 1a8:	82 e3       	ldi	r24, 0x32	; 50
 1aa:	08 95       	ret
 1ac:	1e 99       	sbic	0x03, 6	; 3
 1ae:	fe cf       	rjmp	.-4      	; 0x1ac <keyPressed+0xe6>
 1b0:	2a 98       	cbi	0x05, 2	; 5
 1b2:	83 e3       	ldi	r24, 0x33	; 51
 1b4:	08 95       	ret
 1b6:	2a 98       	cbi	0x05, 2	; 5
 1b8:	2f ef       	ldi	r18, 0xFF	; 255
 1ba:	80 e7       	ldi	r24, 0x70	; 112
 1bc:	92 e0       	ldi	r25, 0x02	; 2
 1be:	21 50       	subi	r18, 0x01	; 1
 1c0:	80 40       	sbci	r24, 0x00	; 0
 1c2:	90 40       	sbci	r25, 0x00	; 0
 1c4:	e1 f7       	brne	.-8      	; 0x1be <keyPressed+0xf8>
 1c6:	00 c0       	rjmp	.+0      	; 0x1c8 <keyPressed+0x102>
 1c8:	00 00       	nop
 1ca:	7d cf       	rjmp	.-262    	; 0xc6 <keyPressed>

000001cc <toggle_e>:
 1cc:	59 9a       	sbi	0x0b, 1	; 11
 1ce:	85 e0       	ldi	r24, 0x05	; 5
 1d0:	8a 95       	dec	r24
 1d2:	f1 f7       	brne	.-4      	; 0x1d0 <toggle_e+0x4>
 1d4:	00 00       	nop
 1d6:	59 98       	cbi	0x0b, 1	; 11
 1d8:	08 95       	ret

000001da <lcd_write>:
 1da:	cf 93       	push	r28
 1dc:	c8 2f       	mov	r28, r24
 1de:	66 23       	and	r22, r22
 1e0:	11 f0       	breq	.+4      	; 0x1e6 <lcd_write+0xc>
 1e2:	58 9a       	sbi	0x0b, 0	; 11
 1e4:	01 c0       	rjmp	.+2      	; 0x1e8 <lcd_write+0xe>
 1e6:	58 98       	cbi	0x0b, 0	; 11
 1e8:	54 9a       	sbi	0x0a, 4	; 10
 1ea:	55 9a       	sbi	0x0a, 5	; 10
 1ec:	56 9a       	sbi	0x0a, 6	; 10
 1ee:	57 9a       	sbi	0x0a, 7	; 10
 1f0:	5f 98       	cbi	0x0b, 7	; 11
 1f2:	5e 98       	cbi	0x0b, 6	; 11
 1f4:	5d 98       	cbi	0x0b, 5	; 11
 1f6:	5c 98       	cbi	0x0b, 4	; 11
 1f8:	cc 23       	and	r28, r28
 1fa:	0c f4       	brge	.+2      	; 0x1fe <lcd_write+0x24>
 1fc:	5f 9a       	sbi	0x0b, 7	; 11
 1fe:	c6 fd       	sbrc	r28, 6
 200:	5e 9a       	sbi	0x0b, 6	; 11
 202:	c5 fd       	sbrc	r28, 5
 204:	5d 9a       	sbi	0x0b, 5	; 11
 206:	c4 fd       	sbrc	r28, 4
 208:	5c 9a       	sbi	0x0b, 4	; 11
 20a:	0e 94 e6 00 	call	0x1cc	; 0x1cc <toggle_e>
 20e:	5f 98       	cbi	0x0b, 7	; 11
 210:	5e 98       	cbi	0x0b, 6	; 11
 212:	5d 98       	cbi	0x0b, 5	; 11
 214:	5c 98       	cbi	0x0b, 4	; 11
 216:	c3 fd       	sbrc	r28, 3
 218:	5f 9a       	sbi	0x0b, 7	; 11
 21a:	c2 fd       	sbrc	r28, 2
 21c:	5e 9a       	sbi	0x0b, 6	; 11
 21e:	c1 fd       	sbrc	r28, 1
 220:	5d 9a       	sbi	0x0b, 5	; 11
 222:	c0 fd       	sbrc	r28, 0
 224:	5c 9a       	sbi	0x0b, 4	; 11
 226:	0e 94 e6 00 	call	0x1cc	; 0x1cc <toggle_e>
 22a:	5c 9a       	sbi	0x0b, 4	; 11
 22c:	5d 9a       	sbi	0x0b, 5	; 11
 22e:	5e 9a       	sbi	0x0b, 6	; 11
 230:	5f 9a       	sbi	0x0b, 7	; 11
 232:	87 eb       	ldi	r24, 0xB7	; 183
 234:	9b e0       	ldi	r25, 0x0B	; 11
 236:	01 97       	sbiw	r24, 0x01	; 1
 238:	f1 f7       	brne	.-4      	; 0x236 <lcd_write+0x5c>
 23a:	00 c0       	rjmp	.+0      	; 0x23c <lcd_write+0x62>
 23c:	00 00       	nop
 23e:	cf 91       	pop	r28
 240:	08 95       	ret

00000242 <lcd_command>:
 242:	60 e0       	ldi	r22, 0x00	; 0
 244:	0e 94 ed 00 	call	0x1da	; 0x1da <lcd_write>
 248:	08 95       	ret

0000024a <lcd_gotoxy>:
 24a:	61 11       	cpse	r22, r1
 24c:	04 c0       	rjmp	.+8      	; 0x256 <lcd_gotoxy+0xc>
 24e:	80 58       	subi	r24, 0x80	; 128
 250:	0e 94 21 01 	call	0x242	; 0x242 <lcd_command>
 254:	08 95       	ret
 256:	80 54       	subi	r24, 0x40	; 64
 258:	0e 94 21 01 	call	0x242	; 0x242 <lcd_command>
 25c:	08 95       	ret

0000025e <lcd_clrscr>:
 25e:	81 e0       	ldi	r24, 0x01	; 1
 260:	0e 94 21 01 	call	0x242	; 0x242 <lcd_command>
 264:	08 95       	ret

00000266 <lcd_putc>:
 266:	61 e0       	ldi	r22, 0x01	; 1
 268:	0e 94 ed 00 	call	0x1da	; 0x1da <lcd_write>
 26c:	08 95       	ret

0000026e <lcd_puts>:
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	ec 01       	movw	r28, r24
 274:	21 96       	adiw	r28, 0x01	; 1
 276:	fc 01       	movw	r30, r24
 278:	80 81       	ld	r24, Z
 27a:	88 23       	and	r24, r24
 27c:	29 f0       	breq	.+10     	; 0x288 <lcd_puts+0x1a>
 27e:	0e 94 33 01 	call	0x266	; 0x266 <lcd_putc>
 282:	89 91       	ld	r24, Y+
 284:	81 11       	cpse	r24, r1
 286:	fb cf       	rjmp	.-10     	; 0x27e <lcd_puts+0x10>
 288:	df 91       	pop	r29
 28a:	cf 91       	pop	r28
 28c:	08 95       	ret

0000028e <lcd_init>:
 28e:	cf 93       	push	r28
 290:	c8 2f       	mov	r28, r24
 292:	50 9a       	sbi	0x0a, 0	; 10
 294:	55 9a       	sbi	0x0a, 5	; 10
 296:	51 9a       	sbi	0x0a, 1	; 10
 298:	54 9a       	sbi	0x0a, 4	; 10
 29a:	55 9a       	sbi	0x0a, 5	; 10
 29c:	56 9a       	sbi	0x0a, 6	; 10
 29e:	57 9a       	sbi	0x0a, 7	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 2a0:	8f ef       	ldi	r24, 0xFF	; 255
 2a2:	99 ef       	ldi	r25, 0xF9	; 249
 2a4:	01 97       	sbiw	r24, 0x01	; 1
 2a6:	f1 f7       	brne	.-4      	; 0x2a4 <lcd_init+0x16>
 2a8:	00 c0       	rjmp	.+0      	; 0x2aa <lcd_init+0x1c>
 2aa:	00 00       	nop
 2ac:	5d 9a       	sbi	0x0b, 5	; 11
 2ae:	5c 9a       	sbi	0x0b, 4	; 11
 2b0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <toggle_e>
 2b4:	8f e1       	ldi	r24, 0x1F	; 31
 2b6:	9e e4       	ldi	r25, 0x4E	; 78
 2b8:	01 97       	sbiw	r24, 0x01	; 1
 2ba:	f1 f7       	brne	.-4      	; 0x2b8 <lcd_init+0x2a>
 2bc:	00 c0       	rjmp	.+0      	; 0x2be <lcd_init+0x30>
 2be:	00 00       	nop
 2c0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <toggle_e>
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	90 e0       	ldi	r25, 0x00	; 0
 2c8:	01 97       	sbiw	r24, 0x01	; 1
 2ca:	f1 f7       	brne	.-4      	; 0x2c8 <lcd_init+0x3a>
 2cc:	00 c0       	rjmp	.+0      	; 0x2ce <lcd_init+0x40>
 2ce:	00 00       	nop
 2d0:	0e 94 e6 00 	call	0x1cc	; 0x1cc <toggle_e>
 2d4:	8f ef       	ldi	r24, 0xFF	; 255
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	01 97       	sbiw	r24, 0x01	; 1
 2da:	f1 f7       	brne	.-4      	; 0x2d8 <lcd_init+0x4a>
 2dc:	00 c0       	rjmp	.+0      	; 0x2de <lcd_init+0x50>
 2de:	00 00       	nop
 2e0:	5c 98       	cbi	0x0b, 4	; 11
 2e2:	0e 94 e6 00 	call	0x1cc	; 0x1cc <toggle_e>
 2e6:	8f ef       	ldi	r24, 0xFF	; 255
 2e8:	90 e0       	ldi	r25, 0x00	; 0
 2ea:	01 97       	sbiw	r24, 0x01	; 1
 2ec:	f1 f7       	brne	.-4      	; 0x2ea <lcd_init+0x5c>
 2ee:	00 c0       	rjmp	.+0      	; 0x2f0 <lcd_init+0x62>
 2f0:	00 00       	nop
 2f2:	88 e2       	ldi	r24, 0x28	; 40
 2f4:	0e 94 21 01 	call	0x242	; 0x242 <lcd_command>
 2f8:	88 e0       	ldi	r24, 0x08	; 8
 2fa:	0e 94 21 01 	call	0x242	; 0x242 <lcd_command>
 2fe:	0e 94 2f 01 	call	0x25e	; 0x25e <lcd_clrscr>
 302:	86 e0       	ldi	r24, 0x06	; 6
 304:	0e 94 21 01 	call	0x242	; 0x242 <lcd_command>
 308:	8c 2f       	mov	r24, r28
 30a:	0e 94 21 01 	call	0x242	; 0x242 <lcd_command>
 30e:	cf 91       	pop	r28
 310:	08 95       	ret

00000312 <savePIN>:
	}
	return 0;

}

void savePIN(void){
 312:	ef 92       	push	r14
 314:	ff 92       	push	r15
 316:	0f 93       	push	r16
 318:	1f 93       	push	r17
 31a:	cf 93       	push	r28
 31c:	df 93       	push	r29
 31e:	cd b7       	in	r28, 0x3d	; 61
 320:	de b7       	in	r29, 0x3e	; 62
 322:	2c 97       	sbiw	r28, 0x0c	; 12
 324:	0f b6       	in	r0, 0x3f	; 63
 326:	f8 94       	cli
 328:	de bf       	out	0x3e, r29	; 62
 32a:	0f be       	out	0x3f, r0	; 63
 32c:	cd bf       	out	0x3d, r28	; 61
	
	char buf[4];
	char response[4];
	
	//Ler o pino guardado
	data = eeprom_read_word((uint16_t*) 1246);
 32e:	8e ed       	ldi	r24, 0xDE	; 222
 330:	94 e0       	ldi	r25, 0x04	; 4
 332:	0e 94 aa 05 	call	0xb54	; 0xb54 <eeprom_read_word>
	//Transformar o pin guardado em string o int status dá o numero de caracteres guardado
	int status = sprintf(buf,"%d",data);
 336:	9f 93       	push	r25
 338:	8f 93       	push	r24
 33a:	00 e0       	ldi	r16, 0x00	; 0
 33c:	11 e0       	ldi	r17, 0x01	; 1
 33e:	1f 93       	push	r17
 340:	0f 93       	push	r16
 342:	ce 01       	movw	r24, r28
 344:	01 96       	adiw	r24, 0x01	; 1
 346:	9f 93       	push	r25
 348:	8f 93       	push	r24
 34a:	0e 94 f7 02 	call	0x5ee	; 0x5ee <sprintf>
 34e:	7c 01       	movw	r14, r24
	//Transformar o status em string
	sprintf(response,"%d",status);
 350:	ff 92       	push	r15
 352:	8f 93       	push	r24
 354:	1f 93       	push	r17
 356:	0f 93       	push	r16
 358:	ce 01       	movw	r24, r28
 35a:	05 96       	adiw	r24, 0x05	; 5
 35c:	9f 93       	push	r25
 35e:	8f 93       	push	r24
 360:	0e 94 f7 02 	call	0x5ee	; 0x5ee <sprintf>
	
	//Caso seja diferente de 4 entao guardar um novo codigo
	if(status != 4){
 364:	0f b6       	in	r0, 0x3f	; 63
 366:	f8 94       	cli
 368:	de bf       	out	0x3e, r29	; 62
 36a:	0f be       	out	0x3f, r0	; 63
 36c:	cd bf       	out	0x3d, r28	; 61
 36e:	94 e0       	ldi	r25, 0x04	; 4
 370:	e9 16       	cp	r14, r25
 372:	f1 04       	cpc	r15, r1
 374:	09 f4       	brne	.+2      	; 0x378 <savePIN+0x66>
 376:	45 c0       	rjmp	.+138    	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
		
		//IMPRIME PARA O ECRA
		lcd_gotoxy(3, 0);
 378:	60 e0       	ldi	r22, 0x00	; 0
 37a:	83 e0       	ldi	r24, 0x03	; 3
 37c:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
		lcd_puts("SAVE CODE");
 380:	83 e0       	ldi	r24, 0x03	; 3
 382:	91 e0       	ldi	r25, 0x01	; 1
 384:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_puts>

		lcd_gotoxy(6,1);
 388:	61 e0       	ldi	r22, 0x01	; 1
 38a:	86 e0       	ldi	r24, 0x06	; 6
 38c:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
		lcd_puts("----");
 390:	8d e0       	ldi	r24, 0x0D	; 13
 392:	91 e0       	ldi	r25, 0x01	; 1
 394:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_puts>
		
		//LER DO TECLADO
		int i = 0;
		char pin[4]={'-','-','-','-'};
 398:	8d e2       	ldi	r24, 0x2D	; 45
 39a:	89 87       	std	Y+9, r24	; 0x09
 39c:	8a 87       	std	Y+10, r24	; 0x0a
 39e:	8b 87       	std	Y+11, r24	; 0x0b
 3a0:	8c 87       	std	Y+12, r24	; 0x0c
 3a2:	7e 01       	movw	r14, r28
 3a4:	e9 e0       	ldi	r30, 0x09	; 9
 3a6:	ee 0e       	add	r14, r30
 3a8:	f1 1c       	adc	r15, r1

		lcd_gotoxy(6,1);
		lcd_puts("----");
		
		//LER DO TECLADO
		int i = 0;
 3aa:	00 e0       	ldi	r16, 0x00	; 0
 3ac:	10 e0       	ldi	r17, 0x00	; 0
		char pin[4]={'-','-','-','-'};
		while(i<4){
			
			//LER TECLADO E COLOCAR UM NOVO
			char key = keyPressed();
 3ae:	0e 94 63 00 	call	0xc6	; 0xc6 <keyPressed>
			if(key != 'N'){
 3b2:	8e 34       	cpi	r24, 0x4E	; 78
 3b4:	89 f0       	breq	.+34     	; 0x3d8 <savePIN+0xc6>
				pin[i] = key;
 3b6:	f7 01       	movw	r30, r14
 3b8:	81 93       	st	Z+, r24
 3ba:	7f 01       	movw	r14, r30
				lcd_gotoxy(6,1);
 3bc:	61 e0       	ldi	r22, 0x01	; 1
 3be:	86 e0       	ldi	r24, 0x06	; 6
 3c0:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
				lcd_puts(pin);
 3c4:	ce 01       	movw	r24, r28
 3c6:	09 96       	adiw	r24, 0x09	; 9
 3c8:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_puts>
				i++;
 3cc:	0f 5f       	subi	r16, 0xFF	; 255
 3ce:	1f 4f       	sbci	r17, 0xFF	; 255
		lcd_puts("----");
		
		//LER DO TECLADO
		int i = 0;
		char pin[4]={'-','-','-','-'};
		while(i<4){
 3d0:	04 30       	cpi	r16, 0x04	; 4
 3d2:	11 05       	cpc	r17, r1
 3d4:	21 f0       	breq	.+8      	; 0x3de <savePIN+0xcc>
 3d6:	eb cf       	rjmp	.-42     	; 0x3ae <savePIN+0x9c>
 3d8:	04 30       	cpi	r16, 0x04	; 4
 3da:	11 05       	cpc	r17, r1
 3dc:	44 f3       	brlt	.-48     	; 0x3ae <savePIN+0x9c>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 3de:	ff ef       	ldi	r31, 0xFF	; 255
 3e0:	29 e6       	ldi	r18, 0x69	; 105
 3e2:	88 e1       	ldi	r24, 0x18	; 24
 3e4:	f1 50       	subi	r31, 0x01	; 1
 3e6:	20 40       	sbci	r18, 0x00	; 0
 3e8:	80 40       	sbci	r24, 0x00	; 0
 3ea:	e1 f7       	brne	.-8      	; 0x3e4 <savePIN+0xd2>
 3ec:	00 c0       	rjmp	.+0      	; 0x3ee <savePIN+0xdc>
 3ee:	00 00       	nop
		
		//Time for reading last number input
		_delay_ms(500);
		
		//Guardar o novo codigo
		eeprom_write_word((uint16_t*) 1246,atoi(pin));
 3f0:	ce 01       	movw	r24, r28
 3f2:	09 96       	adiw	r24, 0x09	; 9
 3f4:	0e 94 c8 02 	call	0x590	; 0x590 <atoi>
 3f8:	bc 01       	movw	r22, r24
 3fa:	8e ed       	ldi	r24, 0xDE	; 222
 3fc:	94 e0       	ldi	r25, 0x04	; 4
 3fe:	0e 94 b0 05 	call	0xb60	; 0xb60 <eeprom_write_word>
		

	}

 402:	2c 96       	adiw	r28, 0x0c	; 12
 404:	0f b6       	in	r0, 0x3f	; 63
 406:	f8 94       	cli
 408:	de bf       	out	0x3e, r29	; 62
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	cd bf       	out	0x3d, r28	; 61
 40e:	df 91       	pop	r29
 410:	cf 91       	pop	r28
 412:	1f 91       	pop	r17
 414:	0f 91       	pop	r16
 416:	ff 90       	pop	r15
 418:	ef 90       	pop	r14
 41a:	08 95       	ret

0000041c <main>:

//This is because the last character has to be nule
char code[5];

int main()
{
 41c:	cf 93       	push	r28
 41e:	df 93       	push	r29
 420:	00 d0       	rcall	.+0      	; 0x422 <main+0x6>
 422:	00 d0       	rcall	.+0      	; 0x424 <main+0x8>
 424:	1f 92       	push	r1
 426:	cd b7       	in	r28, 0x3d	; 61
 428:	de b7       	in	r29, 0x3e	; 62
	// Initialize LCD display
	lcd_init(LCD_DISP_ON);
 42a:	8c e0       	ldi	r24, 0x0C	; 12
 42c:	0e 94 47 01 	call	0x28e	; 0x28e <lcd_init>
	
	//configure the ports for the Keypad
	configKeypad();
 430:	0e 94 5f 00 	call	0xbe	; 0xbe <configKeypad>

	//Configura o rele
	//DDRC |= (1<<PORTC0);
	GPIO_config_output(&DDRC, PORTC0);
 434:	60 e0       	ldi	r22, 0x00	; 0
 436:	87 e2       	ldi	r24, 0x27	; 39
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 53 00 	call	0xa6	; 0xa6 <GPIO_config_output>

	savePIN();
 43e:	0e 94 89 01 	call	0x312	; 0x312 <savePIN>
	
	// LER O CODIGO GUARDADO NA EEPROM
	uint16_t data;
	data = eeprom_read_word((uint16_t*) 1246);
 442:	8e ed       	ldi	r24, 0xDE	; 222
 444:	94 e0       	ldi	r25, 0x04	; 4
 446:	0e 94 aa 05 	call	0xb54	; 0xb54 <eeprom_read_word>
	
	//GUARDA O CODIGO NA VARIAVEL CODE
	sprintf(code,"%d",data);
 44a:	9f 93       	push	r25
 44c:	8f 93       	push	r24
 44e:	80 e0       	ldi	r24, 0x00	; 0
 450:	91 e0       	ldi	r25, 0x01	; 1
 452:	9f 93       	push	r25
 454:	8f 93       	push	r24
 456:	8a e2       	ldi	r24, 0x2A	; 42
 458:	91 e0       	ldi	r25, 0x01	; 1
 45a:	9f 93       	push	r25
 45c:	8f 93       	push	r24
 45e:	0e 94 f7 02 	call	0x5ee	; 0x5ee <sprintf>
 462:	0f 90       	pop	r0
 464:	0f 90       	pop	r0
 466:	0f 90       	pop	r0
 468:	0f 90       	pop	r0
 46a:	0f 90       	pop	r0
 46c:	0f 90       	pop	r0
				l++;
			}
		}
		
		pin[4] = NULL;
		code[4] = NULL;
 46e:	0f 2e       	mov	r0, r31
 470:	fa e2       	ldi	r31, 0x2A	; 42
 472:	ef 2e       	mov	r14, r31
 474:	f1 e0       	ldi	r31, 0x01	; 1
 476:	ff 2e       	mov	r15, r31
 478:	f0 2d       	mov	r31, r0
			lcd_puts("OPENED!!!");
			
			//ESPERA 3 SEGUNDOS E TRANCA DE NOVO

			PORTC |= (1<<PORTC0);
			TCCR1B |= (1<<CS10) | (1<<CS12);
 47a:	0f 2e       	mov	r0, r31
 47c:	f1 e8       	ldi	r31, 0x81	; 129
 47e:	cf 2e       	mov	r12, r31
 480:	d1 2c       	mov	r13, r1
 482:	f0 2d       	mov	r31, r0
			OCR1A = 46875;// fui calculador para ter 3 segundos esse e codico 46875
 484:	0f 2e       	mov	r0, r31
 486:	f8 e8       	ldi	r31, 0x88	; 136
 488:	4f 2e       	mov	r4, r31
 48a:	51 2c       	mov	r5, r1
 48c:	f0 2d       	mov	r31, r0
 48e:	0f 2e       	mov	r0, r31
 490:	fb e1       	ldi	r31, 0x1B	; 27
 492:	8f 2e       	mov	r8, r31
 494:	f7 eb       	ldi	r31, 0xB7	; 183
 496:	9f 2e       	mov	r9, r31
 498:	f0 2d       	mov	r31, r0
			TCNT1 = 0;
 49a:	0f 2e       	mov	r0, r31
 49c:	f4 e8       	ldi	r31, 0x84	; 132
 49e:	6f 2e       	mov	r6, r31
 4a0:	71 2c       	mov	r7, r1
 4a2:	f0 2d       	mov	r31, r0

	
	while(1)
	{
		    //LIMPA ECRA
			lcd_clrscr();
 4a4:	0e 94 2f 01 	call	0x25e	; 0x25e <lcd_clrscr>
			//POSICAO DE ESCRITA
			lcd_gotoxy(3, 0);
 4a8:	60 e0       	ldi	r22, 0x00	; 0
 4aa:	83 e0       	ldi	r24, 0x03	; 3
 4ac:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
			//ESCREVE NO ECRA
			lcd_puts("CODE");
 4b0:	88 e0       	ldi	r24, 0x08	; 8
 4b2:	91 e0       	ldi	r25, 0x01	; 1
 4b4:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_puts>

			lcd_gotoxy(6,1);
 4b8:	61 e0       	ldi	r22, 0x01	; 1
 4ba:	86 e0       	ldi	r24, 0x06	; 6
 4bc:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
			lcd_puts("----");
 4c0:	8d e0       	ldi	r24, 0x0D	; 13
 4c2:	91 e0       	ldi	r25, 0x01	; 1
 4c4:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_puts>
 4c8:	ce 01       	movw	r24, r28
 4ca:	01 96       	adiw	r24, 0x01	; 1
 4cc:	5c 01       	movw	r10, r24
 4ce:	0f 2e       	mov	r0, r31
 4d0:	f6 e0       	ldi	r31, 0x06	; 6
 4d2:	3f 2e       	mov	r3, r31
 4d4:	f0 2d       	mov	r31, r0
		
		char pin[5];
		int i = 0;
 4d6:	00 e0       	ldi	r16, 0x00	; 0
 4d8:	10 e0       	ldi	r17, 0x00	; 0
		int l = 6;
		
		//ESPERAR QUE DIGITE O CODIGO
		while(i!=4){
		
		char key = keyPressed();
 4da:	0e 94 63 00 	call	0xc6	; 0xc6 <keyPressed>
		
			if(key != 'N'){
 4de:	8e 34       	cpi	r24, 0x4E	; 78
 4e0:	89 f0       	breq	.+34     	; 0x504 <main+0xe8>
				pin[i] = key;
 4e2:	f5 01       	movw	r30, r10
 4e4:	81 93       	st	Z+, r24
 4e6:	5f 01       	movw	r10, r30
				lcd_gotoxy(l,1);
 4e8:	61 e0       	ldi	r22, 0x01	; 1
 4ea:	83 2d       	mov	r24, r3
 4ec:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
				lcd_putc('*');
 4f0:	8a e2       	ldi	r24, 0x2A	; 42
 4f2:	0e 94 33 01 	call	0x266	; 0x266 <lcd_putc>
				i++;
 4f6:	0f 5f       	subi	r16, 0xFF	; 255
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	33 94       	inc	r3
		char pin[5];
		int i = 0;
		int l = 6;
		
		//ESPERAR QUE DIGITE O CODIGO
		while(i!=4){
 4fc:	fa e0       	ldi	r31, 0x0A	; 10
 4fe:	3f 16       	cp	r3, r31
 500:	21 f0       	breq	.+8      	; 0x50a <main+0xee>
 502:	eb cf       	rjmp	.-42     	; 0x4da <main+0xbe>
 504:	04 30       	cpi	r16, 0x04	; 4
 506:	11 05       	cpc	r17, r1
 508:	41 f7       	brne	.-48     	; 0x4da <main+0xbe>
				i++;
				l++;
			}
		}
		
		pin[4] = NULL;
 50a:	1d 82       	std	Y+5, r1	; 0x05
		code[4] = NULL;
 50c:	f7 01       	movw	r30, r14
 50e:	14 82       	std	Z+4, r1	; 0x04
		if(strcmp(code,pin) == 0){
 510:	be 01       	movw	r22, r28
 512:	6f 5f       	subi	r22, 0xFF	; 255
 514:	7f 4f       	sbci	r23, 0xFF	; 255
 516:	c7 01       	movw	r24, r14
 518:	0e 94 e6 02 	call	0x5cc	; 0x5cc <strcmp>
 51c:	89 2b       	or	r24, r25
 51e:	21 f5       	brne	.+72     	; 0x568 <main+0x14c>
			//Success
			lcd_clrscr();
 520:	0e 94 2f 01 	call	0x25e	; 0x25e <lcd_clrscr>
			lcd_gotoxy(1,0);
 524:	60 e0       	ldi	r22, 0x00	; 0
 526:	81 e0       	ldi	r24, 0x01	; 1
 528:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
			lcd_puts("OPENED!!!");
 52c:	82 e1       	ldi	r24, 0x12	; 18
 52e:	91 e0       	ldi	r25, 0x01	; 1
 530:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_puts>
			
			//ESPERA 3 SEGUNDOS E TRANCA DE NOVO

			PORTC |= (1<<PORTC0);
 534:	40 9a       	sbi	0x08, 0	; 8
			TCCR1B |= (1<<CS10) | (1<<CS12);
 536:	f6 01       	movw	r30, r12
 538:	80 81       	ld	r24, Z
 53a:	85 60       	ori	r24, 0x05	; 5
 53c:	80 83       	st	Z, r24
			OCR1A = 46875;// fui calculador para ter 3 segundos esse e codico 46875
 53e:	f2 01       	movw	r30, r4
 540:	91 82       	std	Z+1, r9	; 0x01
 542:	80 82       	st	Z, r8
			TCNT1 = 0;
 544:	f3 01       	movw	r30, r6
 546:	11 82       	std	Z+1, r1	; 0x01
 548:	10 82       	st	Z, r1
				
			//Locker timeout
			while((TIFR1 & (1<<OCF1A)) == 0);// wait till the timer overflow flag is SET
 54a:	b1 9b       	sbis	0x16, 1	; 22
 54c:	fe cf       	rjmp	.-4      	; 0x54a <main+0x12e>
			PORTC ^= (1<< PORTC0);
 54e:	98 b1       	in	r25, 0x08	; 8
 550:	81 e0       	ldi	r24, 0x01	; 1
 552:	89 27       	eor	r24, r25
 554:	88 b9       	out	0x08, r24	; 8
			TCNT1 = 0;
 556:	f3 01       	movw	r30, r6
 558:	11 82       	std	Z+1, r1	; 0x01
 55a:	10 82       	st	Z, r1
			TCCR1B = 0X00;
 55c:	f6 01       	movw	r30, r12
 55e:	10 82       	st	Z, r1

			TIFR1 |= (1<<OCF1A) ; //clear timer1 overflow flag
 560:	b1 9a       	sbi	0x16, 1	; 22
			lcd_clrscr();
 562:	0e 94 2f 01 	call	0x25e	; 0x25e <lcd_clrscr>
 566:	9e cf       	rjmp	.-196    	; 0x4a4 <main+0x88>
		}else{
			//Fail
			lcd_clrscr();
 568:	0e 94 2f 01 	call	0x25e	; 0x25e <lcd_clrscr>
			lcd_gotoxy(1,0);
 56c:	60 e0       	ldi	r22, 0x00	; 0
 56e:	81 e0       	ldi	r24, 0x01	; 1
 570:	0e 94 25 01 	call	0x24a	; 0x24a <lcd_gotoxy>
			lcd_puts("WRONG CODE!!!");
 574:	8c e1       	ldi	r24, 0x1C	; 28
 576:	91 e0       	ldi	r25, 0x01	; 1
 578:	0e 94 37 01 	call	0x26e	; 0x26e <lcd_puts>
 57c:	ff ef       	ldi	r31, 0xFF	; 255
 57e:	29 e6       	ldi	r18, 0x69	; 105
 580:	88 e1       	ldi	r24, 0x18	; 24
 582:	f1 50       	subi	r31, 0x01	; 1
 584:	20 40       	sbci	r18, 0x00	; 0
 586:	80 40       	sbci	r24, 0x00	; 0
 588:	e1 f7       	brne	.-8      	; 0x582 <main+0x166>
 58a:	00 c0       	rjmp	.+0      	; 0x58c <main+0x170>
 58c:	00 00       	nop
		

		
		//UDR0=key;
		
	}
 58e:	8a cf       	rjmp	.-236    	; 0x4a4 <main+0x88>

00000590 <atoi>:
 590:	fc 01       	movw	r30, r24
 592:	88 27       	eor	r24, r24
 594:	99 27       	eor	r25, r25
 596:	e8 94       	clt
 598:	21 91       	ld	r18, Z+
 59a:	20 32       	cpi	r18, 0x20	; 32
 59c:	e9 f3       	breq	.-6      	; 0x598 <atoi+0x8>
 59e:	29 30       	cpi	r18, 0x09	; 9
 5a0:	10 f0       	brcs	.+4      	; 0x5a6 <atoi+0x16>
 5a2:	2e 30       	cpi	r18, 0x0E	; 14
 5a4:	c8 f3       	brcs	.-14     	; 0x598 <atoi+0x8>
 5a6:	2b 32       	cpi	r18, 0x2B	; 43
 5a8:	41 f0       	breq	.+16     	; 0x5ba <atoi+0x2a>
 5aa:	2d 32       	cpi	r18, 0x2D	; 45
 5ac:	39 f4       	brne	.+14     	; 0x5bc <atoi+0x2c>
 5ae:	68 94       	set
 5b0:	04 c0       	rjmp	.+8      	; 0x5ba <atoi+0x2a>
 5b2:	0e 94 ef 02 	call	0x5de	; 0x5de <__mulhi_const_10>
 5b6:	82 0f       	add	r24, r18
 5b8:	91 1d       	adc	r25, r1
 5ba:	21 91       	ld	r18, Z+
 5bc:	20 53       	subi	r18, 0x30	; 48
 5be:	2a 30       	cpi	r18, 0x0A	; 10
 5c0:	c0 f3       	brcs	.-16     	; 0x5b2 <atoi+0x22>
 5c2:	1e f4       	brtc	.+6      	; 0x5ca <atoi+0x3a>
 5c4:	90 95       	com	r25
 5c6:	81 95       	neg	r24
 5c8:	9f 4f       	sbci	r25, 0xFF	; 255
 5ca:	08 95       	ret

000005cc <strcmp>:
 5cc:	fb 01       	movw	r30, r22
 5ce:	dc 01       	movw	r26, r24
 5d0:	8d 91       	ld	r24, X+
 5d2:	01 90       	ld	r0, Z+
 5d4:	80 19       	sub	r24, r0
 5d6:	01 10       	cpse	r0, r1
 5d8:	d9 f3       	breq	.-10     	; 0x5d0 <strcmp+0x4>
 5da:	99 0b       	sbc	r25, r25
 5dc:	08 95       	ret

000005de <__mulhi_const_10>:
 5de:	7a e0       	ldi	r23, 0x0A	; 10
 5e0:	97 9f       	mul	r25, r23
 5e2:	90 2d       	mov	r25, r0
 5e4:	87 9f       	mul	r24, r23
 5e6:	80 2d       	mov	r24, r0
 5e8:	91 0d       	add	r25, r1
 5ea:	11 24       	eor	r1, r1
 5ec:	08 95       	ret

000005ee <sprintf>:
 5ee:	ae e0       	ldi	r26, 0x0E	; 14
 5f0:	b0 e0       	ldi	r27, 0x00	; 0
 5f2:	ed ef       	ldi	r30, 0xFD	; 253
 5f4:	f2 e0       	ldi	r31, 0x02	; 2
 5f6:	0c 94 e1 05 	jmp	0xbc2	; 0xbc2 <__prologue_saves__+0x1c>
 5fa:	0d 89       	ldd	r16, Y+21	; 0x15
 5fc:	1e 89       	ldd	r17, Y+22	; 0x16
 5fe:	86 e0       	ldi	r24, 0x06	; 6
 600:	8c 83       	std	Y+4, r24	; 0x04
 602:	1a 83       	std	Y+2, r17	; 0x02
 604:	09 83       	std	Y+1, r16	; 0x01
 606:	8f ef       	ldi	r24, 0xFF	; 255
 608:	9f e7       	ldi	r25, 0x7F	; 127
 60a:	9e 83       	std	Y+6, r25	; 0x06
 60c:	8d 83       	std	Y+5, r24	; 0x05
 60e:	ae 01       	movw	r20, r28
 610:	47 5e       	subi	r20, 0xE7	; 231
 612:	5f 4f       	sbci	r21, 0xFF	; 255
 614:	6f 89       	ldd	r22, Y+23	; 0x17
 616:	78 8d       	ldd	r23, Y+24	; 0x18
 618:	ce 01       	movw	r24, r28
 61a:	01 96       	adiw	r24, 0x01	; 1
 61c:	0e 94 19 03 	call	0x632	; 0x632 <vfprintf>
 620:	ef 81       	ldd	r30, Y+7	; 0x07
 622:	f8 85       	ldd	r31, Y+8	; 0x08
 624:	e0 0f       	add	r30, r16
 626:	f1 1f       	adc	r31, r17
 628:	10 82       	st	Z, r1
 62a:	2e 96       	adiw	r28, 0x0e	; 14
 62c:	e4 e0       	ldi	r30, 0x04	; 4
 62e:	0c 94 fd 05 	jmp	0xbfa	; 0xbfa <__epilogue_restores__+0x1c>

00000632 <vfprintf>:
 632:	ab e0       	ldi	r26, 0x0B	; 11
 634:	b0 e0       	ldi	r27, 0x00	; 0
 636:	ef e1       	ldi	r30, 0x1F	; 31
 638:	f3 e0       	ldi	r31, 0x03	; 3
 63a:	0c 94 d3 05 	jmp	0xba6	; 0xba6 <__prologue_saves__>
 63e:	6c 01       	movw	r12, r24
 640:	7b 01       	movw	r14, r22
 642:	8a 01       	movw	r16, r20
 644:	fc 01       	movw	r30, r24
 646:	17 82       	std	Z+7, r1	; 0x07
 648:	16 82       	std	Z+6, r1	; 0x06
 64a:	83 81       	ldd	r24, Z+3	; 0x03
 64c:	81 ff       	sbrs	r24, 1
 64e:	cc c1       	rjmp	.+920    	; 0x9e8 <__stack+0xe9>
 650:	ce 01       	movw	r24, r28
 652:	01 96       	adiw	r24, 0x01	; 1
 654:	3c 01       	movw	r6, r24
 656:	f6 01       	movw	r30, r12
 658:	93 81       	ldd	r25, Z+3	; 0x03
 65a:	f7 01       	movw	r30, r14
 65c:	93 fd       	sbrc	r25, 3
 65e:	85 91       	lpm	r24, Z+
 660:	93 ff       	sbrs	r25, 3
 662:	81 91       	ld	r24, Z+
 664:	7f 01       	movw	r14, r30
 666:	88 23       	and	r24, r24
 668:	09 f4       	brne	.+2      	; 0x66c <vfprintf+0x3a>
 66a:	ba c1       	rjmp	.+884    	; 0x9e0 <__stack+0xe1>
 66c:	85 32       	cpi	r24, 0x25	; 37
 66e:	39 f4       	brne	.+14     	; 0x67e <vfprintf+0x4c>
 670:	93 fd       	sbrc	r25, 3
 672:	85 91       	lpm	r24, Z+
 674:	93 ff       	sbrs	r25, 3
 676:	81 91       	ld	r24, Z+
 678:	7f 01       	movw	r14, r30
 67a:	85 32       	cpi	r24, 0x25	; 37
 67c:	29 f4       	brne	.+10     	; 0x688 <vfprintf+0x56>
 67e:	b6 01       	movw	r22, r12
 680:	90 e0       	ldi	r25, 0x00	; 0
 682:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 686:	e7 cf       	rjmp	.-50     	; 0x656 <vfprintf+0x24>
 688:	91 2c       	mov	r9, r1
 68a:	21 2c       	mov	r2, r1
 68c:	31 2c       	mov	r3, r1
 68e:	ff e1       	ldi	r31, 0x1F	; 31
 690:	f3 15       	cp	r31, r3
 692:	d8 f0       	brcs	.+54     	; 0x6ca <vfprintf+0x98>
 694:	8b 32       	cpi	r24, 0x2B	; 43
 696:	79 f0       	breq	.+30     	; 0x6b6 <vfprintf+0x84>
 698:	38 f4       	brcc	.+14     	; 0x6a8 <vfprintf+0x76>
 69a:	80 32       	cpi	r24, 0x20	; 32
 69c:	79 f0       	breq	.+30     	; 0x6bc <vfprintf+0x8a>
 69e:	83 32       	cpi	r24, 0x23	; 35
 6a0:	a1 f4       	brne	.+40     	; 0x6ca <vfprintf+0x98>
 6a2:	23 2d       	mov	r18, r3
 6a4:	20 61       	ori	r18, 0x10	; 16
 6a6:	1d c0       	rjmp	.+58     	; 0x6e2 <vfprintf+0xb0>
 6a8:	8d 32       	cpi	r24, 0x2D	; 45
 6aa:	61 f0       	breq	.+24     	; 0x6c4 <vfprintf+0x92>
 6ac:	80 33       	cpi	r24, 0x30	; 48
 6ae:	69 f4       	brne	.+26     	; 0x6ca <vfprintf+0x98>
 6b0:	23 2d       	mov	r18, r3
 6b2:	21 60       	ori	r18, 0x01	; 1
 6b4:	16 c0       	rjmp	.+44     	; 0x6e2 <vfprintf+0xb0>
 6b6:	83 2d       	mov	r24, r3
 6b8:	82 60       	ori	r24, 0x02	; 2
 6ba:	38 2e       	mov	r3, r24
 6bc:	e3 2d       	mov	r30, r3
 6be:	e4 60       	ori	r30, 0x04	; 4
 6c0:	3e 2e       	mov	r3, r30
 6c2:	2a c0       	rjmp	.+84     	; 0x718 <vfprintf+0xe6>
 6c4:	f3 2d       	mov	r31, r3
 6c6:	f8 60       	ori	r31, 0x08	; 8
 6c8:	1d c0       	rjmp	.+58     	; 0x704 <vfprintf+0xd2>
 6ca:	37 fc       	sbrc	r3, 7
 6cc:	2d c0       	rjmp	.+90     	; 0x728 <vfprintf+0xf6>
 6ce:	20 ed       	ldi	r18, 0xD0	; 208
 6d0:	28 0f       	add	r18, r24
 6d2:	2a 30       	cpi	r18, 0x0A	; 10
 6d4:	40 f0       	brcs	.+16     	; 0x6e6 <vfprintf+0xb4>
 6d6:	8e 32       	cpi	r24, 0x2E	; 46
 6d8:	b9 f4       	brne	.+46     	; 0x708 <vfprintf+0xd6>
 6da:	36 fc       	sbrc	r3, 6
 6dc:	81 c1       	rjmp	.+770    	; 0x9e0 <__stack+0xe1>
 6de:	23 2d       	mov	r18, r3
 6e0:	20 64       	ori	r18, 0x40	; 64
 6e2:	32 2e       	mov	r3, r18
 6e4:	19 c0       	rjmp	.+50     	; 0x718 <vfprintf+0xe6>
 6e6:	36 fe       	sbrs	r3, 6
 6e8:	06 c0       	rjmp	.+12     	; 0x6f6 <vfprintf+0xc4>
 6ea:	8a e0       	ldi	r24, 0x0A	; 10
 6ec:	98 9e       	mul	r9, r24
 6ee:	20 0d       	add	r18, r0
 6f0:	11 24       	eor	r1, r1
 6f2:	92 2e       	mov	r9, r18
 6f4:	11 c0       	rjmp	.+34     	; 0x718 <vfprintf+0xe6>
 6f6:	ea e0       	ldi	r30, 0x0A	; 10
 6f8:	2e 9e       	mul	r2, r30
 6fa:	20 0d       	add	r18, r0
 6fc:	11 24       	eor	r1, r1
 6fe:	22 2e       	mov	r2, r18
 700:	f3 2d       	mov	r31, r3
 702:	f0 62       	ori	r31, 0x20	; 32
 704:	3f 2e       	mov	r3, r31
 706:	08 c0       	rjmp	.+16     	; 0x718 <vfprintf+0xe6>
 708:	8c 36       	cpi	r24, 0x6C	; 108
 70a:	21 f4       	brne	.+8      	; 0x714 <vfprintf+0xe2>
 70c:	83 2d       	mov	r24, r3
 70e:	80 68       	ori	r24, 0x80	; 128
 710:	38 2e       	mov	r3, r24
 712:	02 c0       	rjmp	.+4      	; 0x718 <vfprintf+0xe6>
 714:	88 36       	cpi	r24, 0x68	; 104
 716:	41 f4       	brne	.+16     	; 0x728 <vfprintf+0xf6>
 718:	f7 01       	movw	r30, r14
 71a:	93 fd       	sbrc	r25, 3
 71c:	85 91       	lpm	r24, Z+
 71e:	93 ff       	sbrs	r25, 3
 720:	81 91       	ld	r24, Z+
 722:	7f 01       	movw	r14, r30
 724:	81 11       	cpse	r24, r1
 726:	b3 cf       	rjmp	.-154    	; 0x68e <vfprintf+0x5c>
 728:	98 2f       	mov	r25, r24
 72a:	9f 7d       	andi	r25, 0xDF	; 223
 72c:	95 54       	subi	r25, 0x45	; 69
 72e:	93 30       	cpi	r25, 0x03	; 3
 730:	28 f4       	brcc	.+10     	; 0x73c <vfprintf+0x10a>
 732:	0c 5f       	subi	r16, 0xFC	; 252
 734:	1f 4f       	sbci	r17, 0xFF	; 255
 736:	9f e3       	ldi	r25, 0x3F	; 63
 738:	99 83       	std	Y+1, r25	; 0x01
 73a:	0d c0       	rjmp	.+26     	; 0x756 <vfprintf+0x124>
 73c:	83 36       	cpi	r24, 0x63	; 99
 73e:	31 f0       	breq	.+12     	; 0x74c <vfprintf+0x11a>
 740:	83 37       	cpi	r24, 0x73	; 115
 742:	71 f0       	breq	.+28     	; 0x760 <vfprintf+0x12e>
 744:	83 35       	cpi	r24, 0x53	; 83
 746:	09 f0       	breq	.+2      	; 0x74a <vfprintf+0x118>
 748:	59 c0       	rjmp	.+178    	; 0x7fc <vfprintf+0x1ca>
 74a:	21 c0       	rjmp	.+66     	; 0x78e <vfprintf+0x15c>
 74c:	f8 01       	movw	r30, r16
 74e:	80 81       	ld	r24, Z
 750:	89 83       	std	Y+1, r24	; 0x01
 752:	0e 5f       	subi	r16, 0xFE	; 254
 754:	1f 4f       	sbci	r17, 0xFF	; 255
 756:	88 24       	eor	r8, r8
 758:	83 94       	inc	r8
 75a:	91 2c       	mov	r9, r1
 75c:	53 01       	movw	r10, r6
 75e:	13 c0       	rjmp	.+38     	; 0x786 <vfprintf+0x154>
 760:	28 01       	movw	r4, r16
 762:	f2 e0       	ldi	r31, 0x02	; 2
 764:	4f 0e       	add	r4, r31
 766:	51 1c       	adc	r5, r1
 768:	f8 01       	movw	r30, r16
 76a:	a0 80       	ld	r10, Z
 76c:	b1 80       	ldd	r11, Z+1	; 0x01
 76e:	36 fe       	sbrs	r3, 6
 770:	03 c0       	rjmp	.+6      	; 0x778 <vfprintf+0x146>
 772:	69 2d       	mov	r22, r9
 774:	70 e0       	ldi	r23, 0x00	; 0
 776:	02 c0       	rjmp	.+4      	; 0x77c <vfprintf+0x14a>
 778:	6f ef       	ldi	r22, 0xFF	; 255
 77a:	7f ef       	ldi	r23, 0xFF	; 255
 77c:	c5 01       	movw	r24, r10
 77e:	0e 94 05 05 	call	0xa0a	; 0xa0a <strnlen>
 782:	4c 01       	movw	r8, r24
 784:	82 01       	movw	r16, r4
 786:	f3 2d       	mov	r31, r3
 788:	ff 77       	andi	r31, 0x7F	; 127
 78a:	3f 2e       	mov	r3, r31
 78c:	16 c0       	rjmp	.+44     	; 0x7ba <vfprintf+0x188>
 78e:	28 01       	movw	r4, r16
 790:	22 e0       	ldi	r18, 0x02	; 2
 792:	42 0e       	add	r4, r18
 794:	51 1c       	adc	r5, r1
 796:	f8 01       	movw	r30, r16
 798:	a0 80       	ld	r10, Z
 79a:	b1 80       	ldd	r11, Z+1	; 0x01
 79c:	36 fe       	sbrs	r3, 6
 79e:	03 c0       	rjmp	.+6      	; 0x7a6 <vfprintf+0x174>
 7a0:	69 2d       	mov	r22, r9
 7a2:	70 e0       	ldi	r23, 0x00	; 0
 7a4:	02 c0       	rjmp	.+4      	; 0x7aa <vfprintf+0x178>
 7a6:	6f ef       	ldi	r22, 0xFF	; 255
 7a8:	7f ef       	ldi	r23, 0xFF	; 255
 7aa:	c5 01       	movw	r24, r10
 7ac:	0e 94 fa 04 	call	0x9f4	; 0x9f4 <strnlen_P>
 7b0:	4c 01       	movw	r8, r24
 7b2:	f3 2d       	mov	r31, r3
 7b4:	f0 68       	ori	r31, 0x80	; 128
 7b6:	3f 2e       	mov	r3, r31
 7b8:	82 01       	movw	r16, r4
 7ba:	33 fc       	sbrc	r3, 3
 7bc:	1b c0       	rjmp	.+54     	; 0x7f4 <vfprintf+0x1c2>
 7be:	82 2d       	mov	r24, r2
 7c0:	90 e0       	ldi	r25, 0x00	; 0
 7c2:	88 16       	cp	r8, r24
 7c4:	99 06       	cpc	r9, r25
 7c6:	b0 f4       	brcc	.+44     	; 0x7f4 <vfprintf+0x1c2>
 7c8:	b6 01       	movw	r22, r12
 7ca:	80 e2       	ldi	r24, 0x20	; 32
 7cc:	90 e0       	ldi	r25, 0x00	; 0
 7ce:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 7d2:	2a 94       	dec	r2
 7d4:	f4 cf       	rjmp	.-24     	; 0x7be <vfprintf+0x18c>
 7d6:	f5 01       	movw	r30, r10
 7d8:	37 fc       	sbrc	r3, 7
 7da:	85 91       	lpm	r24, Z+
 7dc:	37 fe       	sbrs	r3, 7
 7de:	81 91       	ld	r24, Z+
 7e0:	5f 01       	movw	r10, r30
 7e2:	b6 01       	movw	r22, r12
 7e4:	90 e0       	ldi	r25, 0x00	; 0
 7e6:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 7ea:	21 10       	cpse	r2, r1
 7ec:	2a 94       	dec	r2
 7ee:	21 e0       	ldi	r18, 0x01	; 1
 7f0:	82 1a       	sub	r8, r18
 7f2:	91 08       	sbc	r9, r1
 7f4:	81 14       	cp	r8, r1
 7f6:	91 04       	cpc	r9, r1
 7f8:	71 f7       	brne	.-36     	; 0x7d6 <vfprintf+0x1a4>
 7fa:	e8 c0       	rjmp	.+464    	; 0x9cc <__stack+0xcd>
 7fc:	84 36       	cpi	r24, 0x64	; 100
 7fe:	11 f0       	breq	.+4      	; 0x804 <vfprintf+0x1d2>
 800:	89 36       	cpi	r24, 0x69	; 105
 802:	41 f5       	brne	.+80     	; 0x854 <vfprintf+0x222>
 804:	f8 01       	movw	r30, r16
 806:	37 fe       	sbrs	r3, 7
 808:	07 c0       	rjmp	.+14     	; 0x818 <vfprintf+0x1e6>
 80a:	60 81       	ld	r22, Z
 80c:	71 81       	ldd	r23, Z+1	; 0x01
 80e:	82 81       	ldd	r24, Z+2	; 0x02
 810:	93 81       	ldd	r25, Z+3	; 0x03
 812:	0c 5f       	subi	r16, 0xFC	; 252
 814:	1f 4f       	sbci	r17, 0xFF	; 255
 816:	08 c0       	rjmp	.+16     	; 0x828 <vfprintf+0x1f6>
 818:	60 81       	ld	r22, Z
 81a:	71 81       	ldd	r23, Z+1	; 0x01
 81c:	07 2e       	mov	r0, r23
 81e:	00 0c       	add	r0, r0
 820:	88 0b       	sbc	r24, r24
 822:	99 0b       	sbc	r25, r25
 824:	0e 5f       	subi	r16, 0xFE	; 254
 826:	1f 4f       	sbci	r17, 0xFF	; 255
 828:	f3 2d       	mov	r31, r3
 82a:	ff 76       	andi	r31, 0x6F	; 111
 82c:	3f 2e       	mov	r3, r31
 82e:	97 ff       	sbrs	r25, 7
 830:	09 c0       	rjmp	.+18     	; 0x844 <vfprintf+0x212>
 832:	90 95       	com	r25
 834:	80 95       	com	r24
 836:	70 95       	com	r23
 838:	61 95       	neg	r22
 83a:	7f 4f       	sbci	r23, 0xFF	; 255
 83c:	8f 4f       	sbci	r24, 0xFF	; 255
 83e:	9f 4f       	sbci	r25, 0xFF	; 255
 840:	f0 68       	ori	r31, 0x80	; 128
 842:	3f 2e       	mov	r3, r31
 844:	2a e0       	ldi	r18, 0x0A	; 10
 846:	30 e0       	ldi	r19, 0x00	; 0
 848:	a3 01       	movw	r20, r6
 84a:	0e 94 4c 05 	call	0xa98	; 0xa98 <__ultoa_invert>
 84e:	88 2e       	mov	r8, r24
 850:	86 18       	sub	r8, r6
 852:	45 c0       	rjmp	.+138    	; 0x8de <vfprintf+0x2ac>
 854:	85 37       	cpi	r24, 0x75	; 117
 856:	31 f4       	brne	.+12     	; 0x864 <vfprintf+0x232>
 858:	23 2d       	mov	r18, r3
 85a:	2f 7e       	andi	r18, 0xEF	; 239
 85c:	b2 2e       	mov	r11, r18
 85e:	2a e0       	ldi	r18, 0x0A	; 10
 860:	30 e0       	ldi	r19, 0x00	; 0
 862:	25 c0       	rjmp	.+74     	; 0x8ae <vfprintf+0x27c>
 864:	93 2d       	mov	r25, r3
 866:	99 7f       	andi	r25, 0xF9	; 249
 868:	b9 2e       	mov	r11, r25
 86a:	8f 36       	cpi	r24, 0x6F	; 111
 86c:	c1 f0       	breq	.+48     	; 0x89e <vfprintf+0x26c>
 86e:	18 f4       	brcc	.+6      	; 0x876 <vfprintf+0x244>
 870:	88 35       	cpi	r24, 0x58	; 88
 872:	79 f0       	breq	.+30     	; 0x892 <vfprintf+0x260>
 874:	b5 c0       	rjmp	.+362    	; 0x9e0 <__stack+0xe1>
 876:	80 37       	cpi	r24, 0x70	; 112
 878:	19 f0       	breq	.+6      	; 0x880 <vfprintf+0x24e>
 87a:	88 37       	cpi	r24, 0x78	; 120
 87c:	21 f0       	breq	.+8      	; 0x886 <vfprintf+0x254>
 87e:	b0 c0       	rjmp	.+352    	; 0x9e0 <__stack+0xe1>
 880:	e9 2f       	mov	r30, r25
 882:	e0 61       	ori	r30, 0x10	; 16
 884:	be 2e       	mov	r11, r30
 886:	b4 fe       	sbrs	r11, 4
 888:	0d c0       	rjmp	.+26     	; 0x8a4 <vfprintf+0x272>
 88a:	fb 2d       	mov	r31, r11
 88c:	f4 60       	ori	r31, 0x04	; 4
 88e:	bf 2e       	mov	r11, r31
 890:	09 c0       	rjmp	.+18     	; 0x8a4 <vfprintf+0x272>
 892:	34 fe       	sbrs	r3, 4
 894:	0a c0       	rjmp	.+20     	; 0x8aa <vfprintf+0x278>
 896:	29 2f       	mov	r18, r25
 898:	26 60       	ori	r18, 0x06	; 6
 89a:	b2 2e       	mov	r11, r18
 89c:	06 c0       	rjmp	.+12     	; 0x8aa <vfprintf+0x278>
 89e:	28 e0       	ldi	r18, 0x08	; 8
 8a0:	30 e0       	ldi	r19, 0x00	; 0
 8a2:	05 c0       	rjmp	.+10     	; 0x8ae <vfprintf+0x27c>
 8a4:	20 e1       	ldi	r18, 0x10	; 16
 8a6:	30 e0       	ldi	r19, 0x00	; 0
 8a8:	02 c0       	rjmp	.+4      	; 0x8ae <vfprintf+0x27c>
 8aa:	20 e1       	ldi	r18, 0x10	; 16
 8ac:	32 e0       	ldi	r19, 0x02	; 2
 8ae:	f8 01       	movw	r30, r16
 8b0:	b7 fe       	sbrs	r11, 7
 8b2:	07 c0       	rjmp	.+14     	; 0x8c2 <vfprintf+0x290>
 8b4:	60 81       	ld	r22, Z
 8b6:	71 81       	ldd	r23, Z+1	; 0x01
 8b8:	82 81       	ldd	r24, Z+2	; 0x02
 8ba:	93 81       	ldd	r25, Z+3	; 0x03
 8bc:	0c 5f       	subi	r16, 0xFC	; 252
 8be:	1f 4f       	sbci	r17, 0xFF	; 255
 8c0:	06 c0       	rjmp	.+12     	; 0x8ce <vfprintf+0x29c>
 8c2:	60 81       	ld	r22, Z
 8c4:	71 81       	ldd	r23, Z+1	; 0x01
 8c6:	80 e0       	ldi	r24, 0x00	; 0
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	0e 5f       	subi	r16, 0xFE	; 254
 8cc:	1f 4f       	sbci	r17, 0xFF	; 255
 8ce:	a3 01       	movw	r20, r6
 8d0:	0e 94 4c 05 	call	0xa98	; 0xa98 <__ultoa_invert>
 8d4:	88 2e       	mov	r8, r24
 8d6:	86 18       	sub	r8, r6
 8d8:	fb 2d       	mov	r31, r11
 8da:	ff 77       	andi	r31, 0x7F	; 127
 8dc:	3f 2e       	mov	r3, r31
 8de:	36 fe       	sbrs	r3, 6
 8e0:	0d c0       	rjmp	.+26     	; 0x8fc <vfprintf+0x2ca>
 8e2:	23 2d       	mov	r18, r3
 8e4:	2e 7f       	andi	r18, 0xFE	; 254
 8e6:	a2 2e       	mov	r10, r18
 8e8:	89 14       	cp	r8, r9
 8ea:	58 f4       	brcc	.+22     	; 0x902 <__stack+0x3>
 8ec:	34 fe       	sbrs	r3, 4
 8ee:	0b c0       	rjmp	.+22     	; 0x906 <__stack+0x7>
 8f0:	32 fc       	sbrc	r3, 2
 8f2:	09 c0       	rjmp	.+18     	; 0x906 <__stack+0x7>
 8f4:	83 2d       	mov	r24, r3
 8f6:	8e 7e       	andi	r24, 0xEE	; 238
 8f8:	a8 2e       	mov	r10, r24
 8fa:	05 c0       	rjmp	.+10     	; 0x906 <__stack+0x7>
 8fc:	b8 2c       	mov	r11, r8
 8fe:	a3 2c       	mov	r10, r3
 900:	03 c0       	rjmp	.+6      	; 0x908 <__stack+0x9>
 902:	b8 2c       	mov	r11, r8
 904:	01 c0       	rjmp	.+2      	; 0x908 <__stack+0x9>
 906:	b9 2c       	mov	r11, r9
 908:	a4 fe       	sbrs	r10, 4
 90a:	0f c0       	rjmp	.+30     	; 0x92a <__stack+0x2b>
 90c:	fe 01       	movw	r30, r28
 90e:	e8 0d       	add	r30, r8
 910:	f1 1d       	adc	r31, r1
 912:	80 81       	ld	r24, Z
 914:	80 33       	cpi	r24, 0x30	; 48
 916:	21 f4       	brne	.+8      	; 0x920 <__stack+0x21>
 918:	9a 2d       	mov	r25, r10
 91a:	99 7e       	andi	r25, 0xE9	; 233
 91c:	a9 2e       	mov	r10, r25
 91e:	09 c0       	rjmp	.+18     	; 0x932 <__stack+0x33>
 920:	a2 fe       	sbrs	r10, 2
 922:	06 c0       	rjmp	.+12     	; 0x930 <__stack+0x31>
 924:	b3 94       	inc	r11
 926:	b3 94       	inc	r11
 928:	04 c0       	rjmp	.+8      	; 0x932 <__stack+0x33>
 92a:	8a 2d       	mov	r24, r10
 92c:	86 78       	andi	r24, 0x86	; 134
 92e:	09 f0       	breq	.+2      	; 0x932 <__stack+0x33>
 930:	b3 94       	inc	r11
 932:	a3 fc       	sbrc	r10, 3
 934:	11 c0       	rjmp	.+34     	; 0x958 <__stack+0x59>
 936:	a0 fe       	sbrs	r10, 0
 938:	06 c0       	rjmp	.+12     	; 0x946 <__stack+0x47>
 93a:	b2 14       	cp	r11, r2
 93c:	88 f4       	brcc	.+34     	; 0x960 <__stack+0x61>
 93e:	28 0c       	add	r2, r8
 940:	92 2c       	mov	r9, r2
 942:	9b 18       	sub	r9, r11
 944:	0e c0       	rjmp	.+28     	; 0x962 <__stack+0x63>
 946:	b2 14       	cp	r11, r2
 948:	60 f4       	brcc	.+24     	; 0x962 <__stack+0x63>
 94a:	b6 01       	movw	r22, r12
 94c:	80 e2       	ldi	r24, 0x20	; 32
 94e:	90 e0       	ldi	r25, 0x00	; 0
 950:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 954:	b3 94       	inc	r11
 956:	f7 cf       	rjmp	.-18     	; 0x946 <__stack+0x47>
 958:	b2 14       	cp	r11, r2
 95a:	18 f4       	brcc	.+6      	; 0x962 <__stack+0x63>
 95c:	2b 18       	sub	r2, r11
 95e:	02 c0       	rjmp	.+4      	; 0x964 <__stack+0x65>
 960:	98 2c       	mov	r9, r8
 962:	21 2c       	mov	r2, r1
 964:	a4 fe       	sbrs	r10, 4
 966:	10 c0       	rjmp	.+32     	; 0x988 <__stack+0x89>
 968:	b6 01       	movw	r22, r12
 96a:	80 e3       	ldi	r24, 0x30	; 48
 96c:	90 e0       	ldi	r25, 0x00	; 0
 96e:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 972:	a2 fe       	sbrs	r10, 2
 974:	17 c0       	rjmp	.+46     	; 0x9a4 <__stack+0xa5>
 976:	a1 fc       	sbrc	r10, 1
 978:	03 c0       	rjmp	.+6      	; 0x980 <__stack+0x81>
 97a:	88 e7       	ldi	r24, 0x78	; 120
 97c:	90 e0       	ldi	r25, 0x00	; 0
 97e:	02 c0       	rjmp	.+4      	; 0x984 <__stack+0x85>
 980:	88 e5       	ldi	r24, 0x58	; 88
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	b6 01       	movw	r22, r12
 986:	0c c0       	rjmp	.+24     	; 0x9a0 <__stack+0xa1>
 988:	8a 2d       	mov	r24, r10
 98a:	86 78       	andi	r24, 0x86	; 134
 98c:	59 f0       	breq	.+22     	; 0x9a4 <__stack+0xa5>
 98e:	a1 fe       	sbrs	r10, 1
 990:	02 c0       	rjmp	.+4      	; 0x996 <__stack+0x97>
 992:	8b e2       	ldi	r24, 0x2B	; 43
 994:	01 c0       	rjmp	.+2      	; 0x998 <__stack+0x99>
 996:	80 e2       	ldi	r24, 0x20	; 32
 998:	a7 fc       	sbrc	r10, 7
 99a:	8d e2       	ldi	r24, 0x2D	; 45
 99c:	b6 01       	movw	r22, r12
 99e:	90 e0       	ldi	r25, 0x00	; 0
 9a0:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 9a4:	89 14       	cp	r8, r9
 9a6:	38 f4       	brcc	.+14     	; 0x9b6 <__stack+0xb7>
 9a8:	b6 01       	movw	r22, r12
 9aa:	80 e3       	ldi	r24, 0x30	; 48
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 9b2:	9a 94       	dec	r9
 9b4:	f7 cf       	rjmp	.-18     	; 0x9a4 <__stack+0xa5>
 9b6:	8a 94       	dec	r8
 9b8:	f3 01       	movw	r30, r6
 9ba:	e8 0d       	add	r30, r8
 9bc:	f1 1d       	adc	r31, r1
 9be:	80 81       	ld	r24, Z
 9c0:	b6 01       	movw	r22, r12
 9c2:	90 e0       	ldi	r25, 0x00	; 0
 9c4:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 9c8:	81 10       	cpse	r8, r1
 9ca:	f5 cf       	rjmp	.-22     	; 0x9b6 <__stack+0xb7>
 9cc:	22 20       	and	r2, r2
 9ce:	09 f4       	brne	.+2      	; 0x9d2 <__stack+0xd3>
 9d0:	42 ce       	rjmp	.-892    	; 0x656 <vfprintf+0x24>
 9d2:	b6 01       	movw	r22, r12
 9d4:	80 e2       	ldi	r24, 0x20	; 32
 9d6:	90 e0       	ldi	r25, 0x00	; 0
 9d8:	0e 94 10 05 	call	0xa20	; 0xa20 <fputc>
 9dc:	2a 94       	dec	r2
 9de:	f6 cf       	rjmp	.-20     	; 0x9cc <__stack+0xcd>
 9e0:	f6 01       	movw	r30, r12
 9e2:	86 81       	ldd	r24, Z+6	; 0x06
 9e4:	97 81       	ldd	r25, Z+7	; 0x07
 9e6:	02 c0       	rjmp	.+4      	; 0x9ec <__stack+0xed>
 9e8:	8f ef       	ldi	r24, 0xFF	; 255
 9ea:	9f ef       	ldi	r25, 0xFF	; 255
 9ec:	2b 96       	adiw	r28, 0x0b	; 11
 9ee:	e2 e1       	ldi	r30, 0x12	; 18
 9f0:	0c 94 ef 05 	jmp	0xbde	; 0xbde <__epilogue_restores__>

000009f4 <strnlen_P>:
 9f4:	fc 01       	movw	r30, r24
 9f6:	05 90       	lpm	r0, Z+
 9f8:	61 50       	subi	r22, 0x01	; 1
 9fa:	70 40       	sbci	r23, 0x00	; 0
 9fc:	01 10       	cpse	r0, r1
 9fe:	d8 f7       	brcc	.-10     	; 0x9f6 <strnlen_P+0x2>
 a00:	80 95       	com	r24
 a02:	90 95       	com	r25
 a04:	8e 0f       	add	r24, r30
 a06:	9f 1f       	adc	r25, r31
 a08:	08 95       	ret

00000a0a <strnlen>:
 a0a:	fc 01       	movw	r30, r24
 a0c:	61 50       	subi	r22, 0x01	; 1
 a0e:	70 40       	sbci	r23, 0x00	; 0
 a10:	01 90       	ld	r0, Z+
 a12:	01 10       	cpse	r0, r1
 a14:	d8 f7       	brcc	.-10     	; 0xa0c <strnlen+0x2>
 a16:	80 95       	com	r24
 a18:	90 95       	com	r25
 a1a:	8e 0f       	add	r24, r30
 a1c:	9f 1f       	adc	r25, r31
 a1e:	08 95       	ret

00000a20 <fputc>:
 a20:	0f 93       	push	r16
 a22:	1f 93       	push	r17
 a24:	cf 93       	push	r28
 a26:	df 93       	push	r29
 a28:	fb 01       	movw	r30, r22
 a2a:	23 81       	ldd	r18, Z+3	; 0x03
 a2c:	21 fd       	sbrc	r18, 1
 a2e:	03 c0       	rjmp	.+6      	; 0xa36 <fputc+0x16>
 a30:	8f ef       	ldi	r24, 0xFF	; 255
 a32:	9f ef       	ldi	r25, 0xFF	; 255
 a34:	2c c0       	rjmp	.+88     	; 0xa8e <fputc+0x6e>
 a36:	22 ff       	sbrs	r18, 2
 a38:	16 c0       	rjmp	.+44     	; 0xa66 <fputc+0x46>
 a3a:	46 81       	ldd	r20, Z+6	; 0x06
 a3c:	57 81       	ldd	r21, Z+7	; 0x07
 a3e:	24 81       	ldd	r18, Z+4	; 0x04
 a40:	35 81       	ldd	r19, Z+5	; 0x05
 a42:	42 17       	cp	r20, r18
 a44:	53 07       	cpc	r21, r19
 a46:	44 f4       	brge	.+16     	; 0xa58 <fputc+0x38>
 a48:	a0 81       	ld	r26, Z
 a4a:	b1 81       	ldd	r27, Z+1	; 0x01
 a4c:	9d 01       	movw	r18, r26
 a4e:	2f 5f       	subi	r18, 0xFF	; 255
 a50:	3f 4f       	sbci	r19, 0xFF	; 255
 a52:	31 83       	std	Z+1, r19	; 0x01
 a54:	20 83       	st	Z, r18
 a56:	8c 93       	st	X, r24
 a58:	26 81       	ldd	r18, Z+6	; 0x06
 a5a:	37 81       	ldd	r19, Z+7	; 0x07
 a5c:	2f 5f       	subi	r18, 0xFF	; 255
 a5e:	3f 4f       	sbci	r19, 0xFF	; 255
 a60:	37 83       	std	Z+7, r19	; 0x07
 a62:	26 83       	std	Z+6, r18	; 0x06
 a64:	14 c0       	rjmp	.+40     	; 0xa8e <fputc+0x6e>
 a66:	8b 01       	movw	r16, r22
 a68:	ec 01       	movw	r28, r24
 a6a:	fb 01       	movw	r30, r22
 a6c:	00 84       	ldd	r0, Z+8	; 0x08
 a6e:	f1 85       	ldd	r31, Z+9	; 0x09
 a70:	e0 2d       	mov	r30, r0
 a72:	09 95       	icall
 a74:	89 2b       	or	r24, r25
 a76:	e1 f6       	brne	.-72     	; 0xa30 <fputc+0x10>
 a78:	d8 01       	movw	r26, r16
 a7a:	16 96       	adiw	r26, 0x06	; 6
 a7c:	8d 91       	ld	r24, X+
 a7e:	9c 91       	ld	r25, X
 a80:	17 97       	sbiw	r26, 0x07	; 7
 a82:	01 96       	adiw	r24, 0x01	; 1
 a84:	17 96       	adiw	r26, 0x07	; 7
 a86:	9c 93       	st	X, r25
 a88:	8e 93       	st	-X, r24
 a8a:	16 97       	sbiw	r26, 0x06	; 6
 a8c:	ce 01       	movw	r24, r28
 a8e:	df 91       	pop	r29
 a90:	cf 91       	pop	r28
 a92:	1f 91       	pop	r17
 a94:	0f 91       	pop	r16
 a96:	08 95       	ret

00000a98 <__ultoa_invert>:
 a98:	fa 01       	movw	r30, r20
 a9a:	aa 27       	eor	r26, r26
 a9c:	28 30       	cpi	r18, 0x08	; 8
 a9e:	51 f1       	breq	.+84     	; 0xaf4 <__ultoa_invert+0x5c>
 aa0:	20 31       	cpi	r18, 0x10	; 16
 aa2:	81 f1       	breq	.+96     	; 0xb04 <__ultoa_invert+0x6c>
 aa4:	e8 94       	clt
 aa6:	6f 93       	push	r22
 aa8:	6e 7f       	andi	r22, 0xFE	; 254
 aaa:	6e 5f       	subi	r22, 0xFE	; 254
 aac:	7f 4f       	sbci	r23, 0xFF	; 255
 aae:	8f 4f       	sbci	r24, 0xFF	; 255
 ab0:	9f 4f       	sbci	r25, 0xFF	; 255
 ab2:	af 4f       	sbci	r26, 0xFF	; 255
 ab4:	b1 e0       	ldi	r27, 0x01	; 1
 ab6:	3e d0       	rcall	.+124    	; 0xb34 <__ultoa_invert+0x9c>
 ab8:	b4 e0       	ldi	r27, 0x04	; 4
 aba:	3c d0       	rcall	.+120    	; 0xb34 <__ultoa_invert+0x9c>
 abc:	67 0f       	add	r22, r23
 abe:	78 1f       	adc	r23, r24
 ac0:	89 1f       	adc	r24, r25
 ac2:	9a 1f       	adc	r25, r26
 ac4:	a1 1d       	adc	r26, r1
 ac6:	68 0f       	add	r22, r24
 ac8:	79 1f       	adc	r23, r25
 aca:	8a 1f       	adc	r24, r26
 acc:	91 1d       	adc	r25, r1
 ace:	a1 1d       	adc	r26, r1
 ad0:	6a 0f       	add	r22, r26
 ad2:	71 1d       	adc	r23, r1
 ad4:	81 1d       	adc	r24, r1
 ad6:	91 1d       	adc	r25, r1
 ad8:	a1 1d       	adc	r26, r1
 ada:	20 d0       	rcall	.+64     	; 0xb1c <__ultoa_invert+0x84>
 adc:	09 f4       	brne	.+2      	; 0xae0 <__ultoa_invert+0x48>
 ade:	68 94       	set
 ae0:	3f 91       	pop	r19
 ae2:	2a e0       	ldi	r18, 0x0A	; 10
 ae4:	26 9f       	mul	r18, r22
 ae6:	11 24       	eor	r1, r1
 ae8:	30 19       	sub	r19, r0
 aea:	30 5d       	subi	r19, 0xD0	; 208
 aec:	31 93       	st	Z+, r19
 aee:	de f6       	brtc	.-74     	; 0xaa6 <__ultoa_invert+0xe>
 af0:	cf 01       	movw	r24, r30
 af2:	08 95       	ret
 af4:	46 2f       	mov	r20, r22
 af6:	47 70       	andi	r20, 0x07	; 7
 af8:	40 5d       	subi	r20, 0xD0	; 208
 afa:	41 93       	st	Z+, r20
 afc:	b3 e0       	ldi	r27, 0x03	; 3
 afe:	0f d0       	rcall	.+30     	; 0xb1e <__ultoa_invert+0x86>
 b00:	c9 f7       	brne	.-14     	; 0xaf4 <__ultoa_invert+0x5c>
 b02:	f6 cf       	rjmp	.-20     	; 0xaf0 <__ultoa_invert+0x58>
 b04:	46 2f       	mov	r20, r22
 b06:	4f 70       	andi	r20, 0x0F	; 15
 b08:	40 5d       	subi	r20, 0xD0	; 208
 b0a:	4a 33       	cpi	r20, 0x3A	; 58
 b0c:	18 f0       	brcs	.+6      	; 0xb14 <__ultoa_invert+0x7c>
 b0e:	49 5d       	subi	r20, 0xD9	; 217
 b10:	31 fd       	sbrc	r19, 1
 b12:	40 52       	subi	r20, 0x20	; 32
 b14:	41 93       	st	Z+, r20
 b16:	02 d0       	rcall	.+4      	; 0xb1c <__ultoa_invert+0x84>
 b18:	a9 f7       	brne	.-22     	; 0xb04 <__ultoa_invert+0x6c>
 b1a:	ea cf       	rjmp	.-44     	; 0xaf0 <__ultoa_invert+0x58>
 b1c:	b4 e0       	ldi	r27, 0x04	; 4
 b1e:	a6 95       	lsr	r26
 b20:	97 95       	ror	r25
 b22:	87 95       	ror	r24
 b24:	77 95       	ror	r23
 b26:	67 95       	ror	r22
 b28:	ba 95       	dec	r27
 b2a:	c9 f7       	brne	.-14     	; 0xb1e <__ultoa_invert+0x86>
 b2c:	00 97       	sbiw	r24, 0x00	; 0
 b2e:	61 05       	cpc	r22, r1
 b30:	71 05       	cpc	r23, r1
 b32:	08 95       	ret
 b34:	9b 01       	movw	r18, r22
 b36:	ac 01       	movw	r20, r24
 b38:	0a 2e       	mov	r0, r26
 b3a:	06 94       	lsr	r0
 b3c:	57 95       	ror	r21
 b3e:	47 95       	ror	r20
 b40:	37 95       	ror	r19
 b42:	27 95       	ror	r18
 b44:	ba 95       	dec	r27
 b46:	c9 f7       	brne	.-14     	; 0xb3a <__ultoa_invert+0xa2>
 b48:	62 0f       	add	r22, r18
 b4a:	73 1f       	adc	r23, r19
 b4c:	84 1f       	adc	r24, r20
 b4e:	95 1f       	adc	r25, r21
 b50:	a0 1d       	adc	r26, r0
 b52:	08 95       	ret

00000b54 <eeprom_read_word>:
 b54:	a8 e1       	ldi	r26, 0x18	; 24
 b56:	b0 e0       	ldi	r27, 0x00	; 0
 b58:	42 e0       	ldi	r20, 0x02	; 2
 b5a:	50 e0       	ldi	r21, 0x00	; 0
 b5c:	0c 94 b7 05 	jmp	0xb6e	; 0xb6e <eeprom_read_blraw>

00000b60 <eeprom_write_word>:
 b60:	0e 94 c5 05 	call	0xb8a	; 0xb8a <eeprom_write_byte>
 b64:	27 2f       	mov	r18, r23
 b66:	0c 94 c6 05 	jmp	0xb8c	; 0xb8c <eeprom_write_r18>

00000b6a <eeprom_read_block>:
 b6a:	dc 01       	movw	r26, r24
 b6c:	cb 01       	movw	r24, r22

00000b6e <eeprom_read_blraw>:
 b6e:	fc 01       	movw	r30, r24
 b70:	f9 99       	sbic	0x1f, 1	; 31
 b72:	fe cf       	rjmp	.-4      	; 0xb70 <eeprom_read_blraw+0x2>
 b74:	06 c0       	rjmp	.+12     	; 0xb82 <eeprom_read_blraw+0x14>
 b76:	f2 bd       	out	0x22, r31	; 34
 b78:	e1 bd       	out	0x21, r30	; 33
 b7a:	f8 9a       	sbi	0x1f, 0	; 31
 b7c:	31 96       	adiw	r30, 0x01	; 1
 b7e:	00 b4       	in	r0, 0x20	; 32
 b80:	0d 92       	st	X+, r0
 b82:	41 50       	subi	r20, 0x01	; 1
 b84:	50 40       	sbci	r21, 0x00	; 0
 b86:	b8 f7       	brcc	.-18     	; 0xb76 <eeprom_read_blraw+0x8>
 b88:	08 95       	ret

00000b8a <eeprom_write_byte>:
 b8a:	26 2f       	mov	r18, r22

00000b8c <eeprom_write_r18>:
 b8c:	f9 99       	sbic	0x1f, 1	; 31
 b8e:	fe cf       	rjmp	.-4      	; 0xb8c <eeprom_write_r18>
 b90:	1f ba       	out	0x1f, r1	; 31
 b92:	92 bd       	out	0x22, r25	; 34
 b94:	81 bd       	out	0x21, r24	; 33
 b96:	20 bd       	out	0x20, r18	; 32
 b98:	0f b6       	in	r0, 0x3f	; 63
 b9a:	f8 94       	cli
 b9c:	fa 9a       	sbi	0x1f, 2	; 31
 b9e:	f9 9a       	sbi	0x1f, 1	; 31
 ba0:	0f be       	out	0x3f, r0	; 63
 ba2:	01 96       	adiw	r24, 0x01	; 1
 ba4:	08 95       	ret

00000ba6 <__prologue_saves__>:
 ba6:	2f 92       	push	r2
 ba8:	3f 92       	push	r3
 baa:	4f 92       	push	r4
 bac:	5f 92       	push	r5
 bae:	6f 92       	push	r6
 bb0:	7f 92       	push	r7
 bb2:	8f 92       	push	r8
 bb4:	9f 92       	push	r9
 bb6:	af 92       	push	r10
 bb8:	bf 92       	push	r11
 bba:	cf 92       	push	r12
 bbc:	df 92       	push	r13
 bbe:	ef 92       	push	r14
 bc0:	ff 92       	push	r15
 bc2:	0f 93       	push	r16
 bc4:	1f 93       	push	r17
 bc6:	cf 93       	push	r28
 bc8:	df 93       	push	r29
 bca:	cd b7       	in	r28, 0x3d	; 61
 bcc:	de b7       	in	r29, 0x3e	; 62
 bce:	ca 1b       	sub	r28, r26
 bd0:	db 0b       	sbc	r29, r27
 bd2:	0f b6       	in	r0, 0x3f	; 63
 bd4:	f8 94       	cli
 bd6:	de bf       	out	0x3e, r29	; 62
 bd8:	0f be       	out	0x3f, r0	; 63
 bda:	cd bf       	out	0x3d, r28	; 61
 bdc:	09 94       	ijmp

00000bde <__epilogue_restores__>:
 bde:	2a 88       	ldd	r2, Y+18	; 0x12
 be0:	39 88       	ldd	r3, Y+17	; 0x11
 be2:	48 88       	ldd	r4, Y+16	; 0x10
 be4:	5f 84       	ldd	r5, Y+15	; 0x0f
 be6:	6e 84       	ldd	r6, Y+14	; 0x0e
 be8:	7d 84       	ldd	r7, Y+13	; 0x0d
 bea:	8c 84       	ldd	r8, Y+12	; 0x0c
 bec:	9b 84       	ldd	r9, Y+11	; 0x0b
 bee:	aa 84       	ldd	r10, Y+10	; 0x0a
 bf0:	b9 84       	ldd	r11, Y+9	; 0x09
 bf2:	c8 84       	ldd	r12, Y+8	; 0x08
 bf4:	df 80       	ldd	r13, Y+7	; 0x07
 bf6:	ee 80       	ldd	r14, Y+6	; 0x06
 bf8:	fd 80       	ldd	r15, Y+5	; 0x05
 bfa:	0c 81       	ldd	r16, Y+4	; 0x04
 bfc:	1b 81       	ldd	r17, Y+3	; 0x03
 bfe:	aa 81       	ldd	r26, Y+2	; 0x02
 c00:	b9 81       	ldd	r27, Y+1	; 0x01
 c02:	ce 0f       	add	r28, r30
 c04:	d1 1d       	adc	r29, r1
 c06:	0f b6       	in	r0, 0x3f	; 63
 c08:	f8 94       	cli
 c0a:	de bf       	out	0x3e, r29	; 62
 c0c:	0f be       	out	0x3f, r0	; 63
 c0e:	cd bf       	out	0x3d, r28	; 61
 c10:	ed 01       	movw	r28, r26
 c12:	08 95       	ret

00000c14 <_exit>:
 c14:	f8 94       	cli

00000c16 <__stop_program>:
 c16:	ff cf       	rjmp	.-2      	; 0xc16 <__stop_program>
